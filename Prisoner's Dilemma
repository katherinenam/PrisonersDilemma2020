
####
# Each team's file must define four tokens:
#     team_name: a string
#     strategy_name: a string
#     strategy_description: a string
#     move: A function that returns 'c' or 'b'
####
import random 

team_name = 'The Rainbow Sparkle Fairies of death'
strategy_name =  'yeah'
strategy_description = 'it do be like dat'
    
def move(my_history, their_history, my_score, their_score):
    ''' Arguments accepted: my_history, their_history are strings.
    my_score, their_score are ints.
    Make my move.
    Returns 'c' or 'b'. 
    
    '''

    c = 0
    b = 0   
    # for letter in my_history:
    #   print("My history: ")
    #   if letter.lower() == "c":
    #     c = c + 1
    #   elif letter.lower() == "b":
    #     b = b + 1

    for letter in their_history:
      if letter.lower() == "c":
        c = c + 1
      elif letter.lower() == "b":
        b = b + 1
    print str(c)+ (" ") + str(b)
    if c >= b :
      return 'b'
    else:
      return 'c'
      
    # for letter in their_history:
    #     if letter.lower() == "c" > "b":
    #       return 'collude'
    #     if letter.lower() == "b" > "c":
    #       return 'betray'    
    # my_history: a string with one letter (c or b) per round that has been played with this opponent.
    # their_history: a string of the same length as history, possibly empty.
    # The first round between these two players is my_history[0] and their_history[0].
    # The most recent round is my_history[-1] and their_history[-1].

    # Analyze my_history and their_history and/or my_score and their_score.
    # Decide whether to return 'c' or 'b'.
    
def test_move(my_history, their_history, my_score, their_score, result):
    '''calls move(my_history, their_history, my_score, their_score)
    from this module. Prints error if return value != result.
    Returns True or False, dpending on whether result was as expected.
    '''
    real_result = move(my_history, their_history, my_score, their_score)
    if real_result == result:
        return True
    else:
        print("move(" +
            ", ".join(["'"+my_history+"'", "'"+their_history+"'",
                       str(my_score), str(their_score)])+
            ") returned " + "'" + real_result + "'" +
            " and should have returned '" + result + "'")
        return False

if __name__ == '__main__':     
    # Test 1: Collude on the first move
    if test_move(my_history='ccc',
      their_history='bbbcccc', 
      my_score=0,
      their_score=0,
      result='b'):
        print 'this test passed'
